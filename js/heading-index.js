// Generated by CoffeeScript 1.6.2
(function() {
  var $, contentElement, docElement, makeIndexForHeadings;

  $ = jQuery;

  contentElement = null;

  docElement = document.documentElement;

  makeIndexForHeadings = function(headings) {
    var arrow, getScrolledHeading, highlightScrolledHeading, indexContainer, list, scrollTimeout, scrollToHeading;

    contentElement.append(indexContainer = $('<nav>', {
      "class": 'headingIndex'
    }));
    indexContainer.append(list = $('<ul>').on('click a', function(event) {
      return scrollToHeading($(event.target).parent().index());
    }));
    headings.each(function() {
      return list.append($('<li>').append($('<a>', {
        href: 'javascript:',
        html: this.innerHTML
      })));
    });
    indexContainer.append(arrow = $('<span>', {
      "class": 'arrow',
      text: 'â–¶'
    }));
    $.easing.easeOutCubic = function(x, t, b, c, d) {
      return c * ((t = t / d - 1) * t * t + 1) + b;
    };
    scrollToHeading = function(indexOrSlug) {
      var heading, scrollTop;

      heading = headings.eq(indexOrSlug);
      scrollTop = heading.offset().top + heading.height() - docElement.clientHeight * .2;
      $('html,body').animate({
        scrollTop: scrollTop
      }, {
        duration: 500,
        easing: 'easeOutCubic',
        done: highlightScrolledHeading
      });
      return heading;
    };
    getScrolledHeading = function() {
      var heading, index, threshold, top, _i, _len;

      threshold = docElement.clientHeight / 2;
      for (index = _i = 0, _len = headings.length; _i < _len; index = ++_i) {
        heading = headings[index];
        top = $(heading).offset().top - docElement.scrollTop;
        if (top > threshold) {
          break;
        }
      }
      return index - 1;
    };
    scrollTimeout = null;
    highlightScrolledHeading = function() {
      var active;

      active = list.children().removeClass('active').eq(getScrolledHeading()).addClass('active').get(0);
      arrow.css({
        left: active.firstChild.offsetLeft - 8,
        top: active.offsetTop + 3
      });
    };
    $(window).on('scroll', function() {
      if (!scrollTimeout) {
        scrollTimeout = setTimeout(function() {
          scrollTimeout = null;
          highlightScrolledHeading();
        }, 40);
      }
    });
    return highlightScrolledHeading();
  };

  $(function() {
    var headings;

    contentElement = $('article > div.content');
    if (contentElement.height() > docElement.clientHeight) {
      headings = contentElement.find('h2');
      if (headings.size() > 1) {
        makeIndexForHeadings(headings);
      }
    }
  });

}).call(this);
